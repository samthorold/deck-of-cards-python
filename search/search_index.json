{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Deck of Cards","text":"<p>Classic deck.</p>"},{"location":"#card_games.deck.Card","title":"Card  <code>dataclass</code>","text":"<p>Card from a classic deck.</p> <p>Attributes:</p> Name Type Description <code>suite</code> <code>Suite</code> <p>Card suite; Club, Diamond, Heart, or Spade.</p> <code>face</code> <code>Face</code> <p>Card face.</p> Source code in <code>card_games/deck.py</code> <pre><code>@dataclass(frozen=True)\nclass Card:\n\"\"\"Card from a classic deck.\n\n    Attributes:\n        suite (Suite): Card suite; Club, Diamond, Heart, or Spade.\n        face (Face): Card face.\n    \"\"\"\n\n    suite: Suite\n    face: Face\n</code></pre>"},{"location":"#card_games.deck.Deck","title":"Deck","text":"<p>Classic deck of cards.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; deck = Deck(seed=1)\n&gt;&gt;&gt; deck.shuffle()\n&gt;&gt;&gt; deck.draw()\nCard(suite=&lt;Suite.SPADE: 4&gt;, face=&lt;Face.QUEEN: 11&gt;)\n</code></pre> <p>Attributes:</p> Name Type Description <code>seed</code> <code>int</code> <p>Random seed.</p> <code>n</code> <code>int</code> <p>Number of decks to include.</p> Source code in <code>card_games/deck.py</code> <pre><code>class Deck:\n\"\"\"Classic deck of cards.\n\n    Examples:\n        &gt;&gt;&gt; deck = Deck(seed=1)\n        &gt;&gt;&gt; deck.shuffle()\n        &gt;&gt;&gt; deck.draw()\n        Card(suite=&lt;Suite.SPADE: 4&gt;, face=&lt;Face.QUEEN: 11&gt;)\n\n    Attributes:\n        seed (int): Random seed.\n        n (int): Number of decks to include.\n\n    \"\"\"\n\n    def __init__(self, seed: int | None = None, n: int = 1):\n        self.seed = seed\n        self.n = n\n        self.random = random.Random(seed)\n        self.available: list[Card] = []\n        self.used: list[Card] = []\n        for _ in range(n):\n            for suite in Suite:\n                for face in Face:\n                    self.available.append(Card(suite=suite, face=face))\n\n    def __len__(self) -&gt; int:\n        return len(self.available)\n\n    def shuffle(self) -&gt; None:\n        self.random.shuffle(self.available)\n\n    def draw(self) -&gt; Card:\n\"\"\"Draw a [card][card_games.deck.Card].\n\n        Returns:\n            card: Single [Card][card_games.deck.Card] object.\n\n        Raises:\n            EmptyDeck: If there are no cards left, raise and error.\n        \"\"\"\n        if not len(self):\n            raise EmptyDeck\n        card = self.available[0]\n        self.available.remove(card)\n        self.used.append(card)\n        return card\n</code></pre>"},{"location":"#card_games.deck.Deck.draw","title":"draw","text":"<pre><code>draw() -&gt; Card\n</code></pre> <p>Draw a card.</p> <p>Returns:</p> Name Type Description <code>card</code> <code>Card</code> <p>Single Card object.</p> <p>Raises:</p> Type Description <code>EmptyDeck</code> <p>If there are no cards left, raise and error.</p> Source code in <code>card_games/deck.py</code> <pre><code>def draw(self) -&gt; Card:\n\"\"\"Draw a [card][card_games.deck.Card].\n\n    Returns:\n        card: Single [Card][card_games.deck.Card] object.\n\n    Raises:\n        EmptyDeck: If there are no cards left, raise and error.\n    \"\"\"\n    if not len(self):\n        raise EmptyDeck\n    card = self.available[0]\n    self.available.remove(card)\n    self.used.append(card)\n    return card\n</code></pre>"},{"location":"#card_games.deck.EmptyDeck","title":"EmptyDeck","text":"<p>Empty deck Exception.</p> Source code in <code>card_games/deck.py</code> <pre><code>class EmptyDeck(Exception):\n\"\"\"Empty deck Exception.\"\"\"\n</code></pre>"},{"location":"#card_games.deck.Face","title":"Face","text":"<p>Card face.</p> Source code in <code>card_games/deck.py</code> <pre><code>class Face(Enum):\n\"\"\"Card face.\"\"\"\n\n    TWO = auto()\n    THREE = auto()\n    FOUR = auto()\n    FIVE = auto()\n    SIX = auto()\n    SEVEN = auto()\n    EIGHT = auto()\n    NINE = auto()\n    TEN = auto()\n    JACK = auto()\n    QUEEN = auto()\n    KING = auto()\n    ACE = auto()\n</code></pre>"},{"location":"#card_games.deck.Suite","title":"Suite","text":"<p>Card suite.</p> Source code in <code>card_games/deck.py</code> <pre><code>class Suite(Enum):\n\"\"\"Card suite.\"\"\"\n\n    CLUB = auto()\n    DIAMOND = auto()\n    HEART = auto()\n    SPADE = auto()\n</code></pre>"}]}